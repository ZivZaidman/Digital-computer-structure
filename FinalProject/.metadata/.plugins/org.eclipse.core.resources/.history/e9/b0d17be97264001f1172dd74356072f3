#include  "../header/api.h"         // private library - API layer
#include  "../header/app.h"         // private library - APP layer

enum FSMstate state;
enum Motorstate stepState;
enum SYSmode lpm_mode;
int input_slot=0;
char input[80]={0};
int Vy_Vx[2]={0};
char Test[5]={0};


void main(void){


     state = Idle;
     stepState = Idlestep;
     lpm_mode = mode0;     // start in idle state on RESET
     sysConfig();     // Configure GPIO, Init ADC
     lcd_init();
     lcd_clear();

     while (1){
         switch(state){
          case Idle:
              lcd_clear();
              stepper_scan(270,90);
              //__bis_SR_register(LPM0_bits + GIE);       // wait for command from SW
              break;
          case calibration: //stepmotor calibration
              IE2 |= UCA0RXIE; // Enable USCI_A0 RX interrupt
              clibrateMotor();
              break;
          case JoystickRotation:
              IE2 |= UCA0RXIE; // Enable USCI_A0 RX interrupt
              Joystickcontroledangle();
              }

         }

}

