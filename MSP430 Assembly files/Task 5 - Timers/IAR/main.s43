#include  "bsp.h"

             NAME   MAIN
             PUBLIC state,main,state0
             EXTERN SysConfig,ClrLEDs,Double,DecLED,PWM,delay,tic, toc, func
             EXTERN PrintLEDs,ReadSWs,PrintSWs2LEDs,Lcd_strobe,TwoMinShow
             
;----------------------------------------------------------------------------------
             ORG      DataSegStart         ; Begins a DATA segment
             
state        DW   0                        ; state variable

;-------------------------------------------------------------------------------------          
             ;RSEG    CSTACK    ; shows to compiler where is the RAM populating limit
                                ; can be ignored
;-------------------------------------------------------------------------------------
             ORG     CodeSegStart            ; Program Reset = Begins a CODE segment
           
main         mov.w   #StackTosStart,SP      ; Initialize stack pointer to the RAM end 
StopWDT      mov.w   #WDTPW+WDTHOLD,&WDTCTL    
             call    #SysConfig
             clr     state                   ; set to idle state at the beginning

;---------------------- FSM_loop -------------------------------------
state0       cmp     #0x00,state         ;check if state0           
             jnz     state1
             bis.w   #CPUOFF+GIE,SR 

state1       cmp     #0x01,state         ;check if state1
             jnz     state2
             call    #TwoMinShow
             
            
state2       cmp     #0x02,state         ;check if state2
             jnz     state3  
             bic.b   #0x3,PBsArrIntEn
             call    #tic
             call    #func
             call    #toc
             bis.b   #0x3,PBsArrIntEn
             
state3       cmp     #0x3,state
             jnz     state0
             call    #PWM
             jmp     state0       
                 
             END
